import pyttsx3
import speech_recognition as sr
import datetime
import webbrowser
import os
import random

# Initialize the speech engine
engine = pyttsx3.init()
engine.setProperty('rate', 150)  # Speech speed
engine.setProperty('volume', 1.0)  # Volume (0.0 to 1.0)

def speak(text):
    engine.say(text)
    engine.runAndWait()

def take_command():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        r.adjust_for_ambient_noise(source)
        audio = r.listen(source)
    try:
        query = r.recognize_google(audio, language='en-in')
        print(f"You said: {query}")
    except sr.UnknownValueError:
        speak("Sorry, I didn't understand. Please repeat.")
        return ""
    except sr.RequestError:
        speak("Sorry, my speech service is down.")
        return ""
    return query.lower()

def jarvis():
    speak("Hello, I am Jarvis. How can I help you?")
    
    while True:
        query = take_command()
        if query == "":
            continue

        # TIME
        if 'time' in query:
            time = datetime.datetime.now().strftime("%H:%M:%S")
            speak(f"The time is {time}")

        # DATE
        elif 'date' in query:
            date = datetime.datetime.now().strftime("%d-%m-%Y")
            speak(f"Today's date is {date}")

        # OPEN WEBSITES
        elif 'open youtube' in query:
            webbrowser.open("https://youtube.com")
            speak("Opening YouTube")
        elif 'open google' in query:
            webbrowser.open("https://google.com")
            speak("Opening Google")
        elif 'open gmail' in query:
            webbrowser.open("https://mail.google.com")
            speak("Opening Gmail")

        # SEARCH GOOGLE
        elif 'search' in query:
            speak("What should I search for?")
            search_query = take_command()
            if search_query:
                url = f"https://www.google.com/search?q={search_query}"
                webbrowser.open(url)
                speak(f"Searching Google for {search_query}")

        # JOKE
        elif 'joke' in query:
            jokes = [
                "Why did the computer show up at work late? It had a hard drive!",
                "Why do programmers prefer dark mode? Because light attracts bugs!",
                "Why did the Python programmer get kicked out of school? Because he kept using 'class'!"
            ]
            joke = random.choice(jokes)
            speak(joke)

        # OPEN LOCAL APPLICATIONS (Example: Notepad)
        elif 'open notepad' in query:
            os.system("notepad")
            speak("Opening Notepad")

        # EXIT
        elif 'exit' in query or 'quit' in query:
            speak("Goodbye!")
            break

        else:
            speak("I can't do that yet. Please try something else.")

jarvis()
